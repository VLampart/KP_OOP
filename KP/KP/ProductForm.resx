<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>